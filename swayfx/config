# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

# Default
# set $menu dmenu_path | dmenu | xargs swaymsg exec --

set $menu bemenu-run -iw

# Additional config to allow programs to open a window and run.
for_window [app_id="^float-win$"] floating enable, resize set width 1080 height 720

# Enable Xwayland
xwayland enable

### Appearance

# Window background blur
blur off
blur_xray off
blur_passes 2
blur_radius 5

shadows off
shadows_on_csd off
shadow_blur_radius 20
shadow_color #0000007F

# inactive window fade amount. 0.0 = no dimming, 1.0 = fully dimmed
default_dim_inactive 0.15
dim_inactive_colors.unfocused #000000FF
dim_inactive_colors.urgent #900000FF

default_border pixel 2
client.focused #FAE6FA90 #FAE6FA68 #1B1B1B #FAE6FAA0
smart_gaps on

gaps inner 2

focus_follows_mouse no
mouse_warping none

# Move minimized windows into Scratchpad (enable|disable)
scratchpad_minimize disable

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg #1B1B1B solid_color
#
# Example configuration:
#
output HDMI-A-1 resolution 1920x1080 position 0,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock' \
         timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
         before-sleep 'swaylock'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Lock desktop
    bindsym $mod+Control+l exec swaylock
    # Sleepy computer zzz
    bindsym $mod+Control+s exec systemctl suspend

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # firfoc
    bindsym $mod+w exec firefox

    # a$$word
    bindsym $mod+p exec keepassxc

    # sloppytop
    bindsym $mod+Escape exec kitty --class=float-win -e btop

    # screenshot
    bindsym $mod+Shift+s exec grim -g "$(slurp)" $HOME/grim_screenshots/$(date +"%Y-%m-%d_%Hh%Mm%Ss")_grim.png

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+Shift+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize shrink height 10px
    bindsym $up resize grow height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
# bar {
#     position top
#
#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#     colors {
#         statusline #ffffff
#         background #323232
#         inactive_workspace #32323200 #32323200 #5c5c5c
#     }
# }
bar swaybar_command waybar

set $laptop $(swaymsg -t get_outputs | jq -r '.[] | select(.make=="Najing CEC Panda FPD Technology CO. ltd").name') 
# Enables proper clamshell behaviour - https://github.com/swaywm/sway/wiki#clamshell-mode
# * added pos argument makes this work with my desk monitor setup
bindswitch --reload --locked lid:on exec swaymsg output $laptop disable
bindswitch --reload --locked lid:off exec swaymsg output $laptop pos 1920 0 enable

# Sound controls - https://wiki.archlinux.org/title/Advanced_Linux_Sound_Architecture#Keyboard_volume_control
bindsym XF86AudioRaiseVolume exec amixer set Master 2%+
bindsym XF86AudioLowerVolume exec amixer set Master 2%-
bindsym XF86AudioMute exec amixer set Master toggle

# Media controls - https://wiki.archlinux.org/title/MPRIS#Playerctl
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# polkit-gnome
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

# Wacom tablet config
set $intuos_pad 1386:886:Wacom_Intuos_BT_S_Pad
set $intuos_pen 1386:886:Wacom_Intuos_BT_S_Pen
exec swaymsg input $intuos_pad map_to_output $laptop
exec swaymsg input $intuos_pen map_to_output $laptop
# 5Head (Braindead) map to bring tablet stuff to focused display
bindsym $mod+Shift+p exec swaymsg input $intuos_pad map_to_output $(swaymsg -t get_outputs | jq -r '.[] | select(.focused==true).name') && swaymsg input $intuos_pen map_to_output $(swaymsg -t get_outputs | jq -r '.[] | select(.focused==true).name')

include /etc/sway/config.d/*
